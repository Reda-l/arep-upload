// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = "mongodb+srv://arep:AVH7fgUnjJmvmedw@arep.t1jhnmd.mongodb.net/bc1?retryWrites=true&w=majority"
}

model User {
  id                    String                 @id @default(auto()) @map("_id") @db.ObjectId
  name                  String
  email                 String                 @unique
  emailVerified         DateTime?
  hashedPassword        String?
  image                 String?
  role                  String
  pole                  String?
  department            String?
  createdAt             DateTime               @default(now())
  updatedAt             DateTime               @updatedAt
  chefChantiersProjects ProjectChefChantiers[]
  chefDeProjectProjects ProjectChefDeProject[]
}

model Programme {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  title      String
  projects   Project[]
  department String?
  image      String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Bordereau {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  sheetJson Json?
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String   @unique @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Project {
  id                      String                 @id @default(auto()) @map("_id") @db.ObjectId
  project_number          String
  title                   String?
  ville                   String?
  amount                  String?
  duration                String?
  predprogress            String?
  realprogress            String?
  paidprogress            String?
  contractor              String?
  programme               Programme?             @relation(fields: [programmeId], references: [id])
  programmeId             String?                @db.ObjectId
  chefDeProject           ProjectChefDeProject[]
  chefChantiers           ProjectChefChantiers[]
  DateDeCommencement      DateTime?
  DateDeFin               DateTime?
  Decomptes               Json[]                 @default([])
  dernierDecompteMontant  String?
  bordereauTTC            String?
  rapports                Json[]
  cadre_administratif     Json?
  ordresDeServices        Json[]                 @default([])
  documents               Json[]                 @default([])
  marche                  Json?                  
  consistance_des_travaux String[]
  points_particuliers     String[]
  avenants                Json[]               @default([])
  province                String[]               @default([])
  type                    String?
  status                  String?                @default("en cours")
  images                  Json[]                 @default([])
  pole                    String?
  createdAt               DateTime               @default(now())
  updatedAt               DateTime               @updatedAt
  userId                  String?                @db.ObjectId
  Bordereau               Bordereau?
  Tasks                   Tasks[]
  blocks                  Block[]
}

model Block {
  id               String    @id @default(auto()) @map("_id") @db.ObjectId
  project          Project   @relation(fields: [projectId], references: [id])
  projectId        String    @unique @db.ObjectId
  date             DateTime?
  description      String?
  severityLevel    String?
  actions          String?
  blockingState    String?   @default("non r√©solu")
  actionsExecution String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}

model Tasks {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  title        String?
  color        String?
  startDate    DateTime
  endDate      DateTime
  progress     Float?
  status       String?
  duration     String?
  dependencies String?
  project      Project  @relation(fields: [projectId], references: [id])
  projectId    String   @db.ObjectId
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

type Decomptes {
  id     String?
  titre  String?
  ficher String?
}

type Rapport {
  id      String?
  contenu String?
  date    String?
}

model ProjectChefDeProject {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ProjectChefChantiers {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @db.ObjectId
  project   Project  @relation(fields: [projectId], references: [id])
  projectId String   @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}







